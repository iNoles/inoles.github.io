---
import Section from './Section.astro';
import SummaryItem from './SummaryItem.astro';

// Define the shape of a GitHub repo object
interface GitHubRepo {
  id: number;
  name: string;
  description: string;
  html_url: string;
}

const API_URL = 'https://api.github.com/search/repositories?q=user:iNoles+is:public+stars:%3E1&sort=stars';
const GITHUB_TOKEN = import.meta.env.GITHUB_TOKEN; // Access the token from environment variables

// Fetch GitHub data during build time with authorization header
const response = await fetch(API_URL, {
  headers: {
    Authorization: `token ${GITHUB_TOKEN}`,
  },
});

if (!response.ok) {
  throw new Error(`HTTP error! Status: ${response.status}`);
}

// Access the 'items' array which contains the repositories
const { items }: { items: GitHubRepo[] } = await response.json();
---

<Section title="Projects">
  {items.map((repo) => (
    <SummaryItem
      name={repo.name}
      description={repo.description}
      link={repo.html_url}
    />
  ))}
</Section>
